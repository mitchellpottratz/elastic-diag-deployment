{"version":3,"sources":["serviceWorker.js","components/auth/Login.js","components/metrics/ClusterHealth.js","components/segments/ClusterOverview.js","actions/clusterOverview.js","constants/actionTypes.js","components/segments/ClusterStatsLoading.js","components/metrics/MetricCard.js","components/segments/ClusterStats.js","actions/clusterStats.js","components/common/SearchForm.js","components/common/IndexSearchResult.js","components/common/NodeSearchResult.js","components/common/DataTable.js","components/ shards/ShardCard.js","components/ shards/ShardCardsList.js","components/modals/IndexModalContent.js","components/nodes/RolesData.js","components/nodes/PluginCard.js","components/nodes/PluginsCardList.js","components/modals/NodeModalContent.js","components/modals/ScrollModal.js","components/common/SearchResults.js","components/segments/Nodes.js","actions/nodes.js","components/segments/Indices.js","actions/indices.js","actions/shards.js","components/dashboard/index.js","App.js","reducers/userReducer.js","reducers/clusterOverviewReducer.js","reducers/clusterStatsReducer.js","reducers/nodesReducer.js","reducers/indicesReducer.js","reducers/shardsReducer.js","reducers/rootReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","Login","props","state","Component","ClusterHealth","status","this","Segment","circular","color","style","width","height","Statistic","paddingTop","Value","ClusterOverview","isLoading","setState","getClusterOverview","setTimeout","clusterOverview","className","loading","connect","content","dispatch","a","type","payload","clusterHealth","ClusterStatsLoading","segmentCount","paddingBottom","MetricCard","title","metric","Header","as","Subheader","ClusterStats","getData","getClusterStats","clusterStats","metrics","indices","count","shards","total","primaries","replication","segments","docs","store","size","fielddata","memory_size","query_cache","Object","keys","map","keyName","i","key","SearchForm","query","handleChange","placeholder","Form","Input","fluid","value","onChange","IndexSearchResult","index","openModal","List","Item","onClick","Content","NodeSearchResult","node","name","DataTable","data","Table","definition","Body","keyIndex","Row","Cell","ShardCard","shard","prirep","marginTop","ip","ShardCardsList","shardStats","onClose","indexShards","filter","indexData","id","iiti","iito","idti","idto","ftt","ft","fe","fm","Fragment","Modal","scrolling","Actions","Button","primary","Icon","RolesData","rolesData","PluginCard","plugin","Card","href","classname","target","rel","Description","description","extra","Feed","Event","Date","Summary","version","elasticsearch_version","java_version","has_native_controller","PluginsCardList","plugins","Grid","stretched","Column","computer","tablet","mobile","NodeModalContent","networkData","host","transport_address","total_indexing_buffer_in_bytes","roles","httpData","settings","http","corsData","cors","osData","os","pluginsData","modulesData","modules","panes","menuItem","render","Tab","menu","secondary","vertical","ScrollModal","open","closeIcon","SearchResults","setPageCount","resultsLength","resultsPerPage","Math","ceil","handlePaginationChange","e","activePage","setCurrentResults","results","slice","result","modalData","closeModal","currentResults","modalOpen","resultType","minHeight","selection","verticalAlign","Pagination","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","length","onPageChange","Nodes","getNodes","searchResults","nodes","getSearchResults","includes","dividing","sub","columns","nodeStats","push","Indices","getIndices","getShards","indicesStats","Dashboard","paddingLeft","user","users","loggedIn","initialState","userReducer","action","clusterOverviewReducer","clusterStatsReducer","nodesReducer","indicesReducer","shardsReducer","combineReducers","createStore","rootReducer","compose","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db57fad2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\n\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\n// components\nimport { Segment, Statistic } from 'semantic-ui-react'\n\n\nclass ClusterHealth extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { status } = this.props;\n\n    return (\n      <Segment \n        circular\n        color={status} \n        style={{ width: 300, height: 300 }}>\n        <Statistic \n          color={status}\n          style={{paddingTop: \"30%\"}}>\n          <Statistic.Value>{status}</Statistic.Value>\n        </Statistic>\n      </Segment>\n    );\n  }\n}\n\n\nexport default ClusterHealth;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getClusterOverview } from \"../../actions/clusterOverview.js\";\n\n// components \nimport { Segment } from \"semantic-ui-react\";\nimport ClusterHealth from \"../metrics/ClusterHealth.js\";\n\n\nclass ClusterOverview extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    this.props.getClusterOverview();\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 1000);\n  }\n\n  render() {\n    const { clusterOverview } = this.props;\n    const { isLoading } = this.state;\n\n    if (isLoading) {\n      return (\n        <div\n        className=\"flex justify-evenly\">\n          <Segment \n            circular\n            style={{ width: 300, height: 300 }}\n            loading>\n          </Segment>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className=\"flex justify-evenly\">\n          <ClusterHealth \n            status={clusterOverview.status} />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    clusterOverview: state.clusterOverview.content\n  };\n}\n\nexport default connect(mapStateToProps, { getClusterOverview })(ClusterOverview);\n","import { SET_CLUSTER_OVERVIEW } from \"../constants/actionTypes.js\";\nimport clusterHealth from \"../api/cluster_health.json\";\n\n\nexport const getClusterOverview = () => async (dispatch) => {\n  dispatch({\n    type: SET_CLUSTER_OVERVIEW,\n    payload: clusterHealth\n  });\n}\n\n\n\n\n","\n// users \nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\n\n// cluster overview\nexport const SET_CLUSTER_OVERVIEW = \"SET_CLUSTER_OVERVIEW\";\n\n// cluster stats \nexport const SET_CLUSTER_STATS = \"SET_CLUSTER_STATS\";\n\n// nodes\nexport const SET_NODES = \"SET_NODES\";\n\n// indices\nexport const SET_INDICES = \"SET_INDICES\";\n\n// shards\nexport const SET_SHARDS = \"SET_SHARDS\";","import React from \"react\";\nimport { Segment, Header } from \"semantic-ui-react\";\n\n\nfunction ClusterStatsLoading(props) {\n  const { segmentCount } = props;\n\n  return (\n    <div\n      style={{paddingTop: 20, paddingBottom: 40}} \n      className=\"flex justify-evenly\">\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n      <Segment circular loading style={{ width: 250, height: 250 }} className=\"circle-loading-segment\"></Segment>\n    </div>\n  )\n}\n\nexport default ClusterStatsLoading;","import React, { Component } from 'react';\n\n// components\nimport { Segment, Header} from 'semantic-ui-react'\n\n\nclass MetricCard extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { title, metric } = this.props;\n\n    return (\n      <Segment circular style={{ width: 250, height: 250 }}>\n        <Header as='h2' style={{paddingTop: \"30%\"}}>\n          {metric}\n          <Header.Subheader>{title}</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n}\n\n\nexport default MetricCard;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getClusterStats} from \"../../actions/clusterStats.js\";\n\n// components\nimport ClusterStatsLoading from \"./ClusterStatsLoading.js\";\nimport MetricCard from \"../metrics/MetricCard.js\";\n\n\nclass ClusterStats extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    await this.props.getClusterStats();\n\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 2000);\n  }\n\n  render() {\n    const { clusterStats } = this.props;\n\n    \n    if (this.state.isLoading) {\n      return (\n        <ClusterStatsLoading \n          segmentCount={9} />\n      )\n    } else {\n      const metrics = {\n        \"Indices\": clusterStats.indices.count,\n        \"Shards\": clusterStats.indices.shards.total,\n        \"Primary Shards\": clusterStats.indices.shards.primaries,\n        \"Replica Shards\": clusterStats.indices.shards.replication,\n        \"Segments\": clusterStats.indices.segments.count,\n        \"Documents\": clusterStats.indices.docs.count,\n        \"Store Size\": clusterStats.indices.store.size,\n        \"Field Data Memory\": clusterStats.indices.fielddata.memory_size,\n        \"Query Cache Size\": clusterStats.indices.query_cache.memory_size\n      };\n\n      return (\n        <div\n          style={{paddingTop: 20, paddingBottom: 40}} \n          className=\"flex justify-evenly\">\n          {Object.keys(metrics).map((keyName, i) => (\n            <MetricCard \n              key={i}\n              title={keyName}\n              metric={metrics[keyName]} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    clusterStats: state.clusterStats.content\n  };\n}\n\nexport default connect(mapStateToProps, { getClusterStats })(ClusterStats);","import { SET_CLUSTER_STATS } from \"../constants/actionTypes.js\";\nimport clusterStats from \"../api/cluster_stats.json\";\n\n\nexport const getClusterStats = () => async (dispatch) => {\n  dispatch({\n    type: SET_CLUSTER_STATS,\n    payload: clusterStats\n  });\n}\n\n","import React from \"react\";\nimport { Form } from 'semantic-ui-react';\n\n\n/**\n * Displays a search form \n * \n * @param { query }         props    The value of the search input\n * @param { handleChange }  props    Function that handles search input change   \n * @param { placeholder }   props    The placeholder for the search input \n */\nfunction SearchForm(props) {\n  const { query, handleChange, placeholder } = props;\n  return (\n    <Form>\n      <Form.Input \n        fluid\n        value={query}\n        placeholder={placeholder}\n        onChange={handleChange} />\n    </Form>\n  );\n}\n\nexport default SearchForm;\n\n\n\n","import React, { Component } from \"react\";\nimport { List } from \"semantic-ui-react\";\n\n\nclass IndexSearchResult extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const { index, openModal } = this.props;\n\n    return (\n      <List.Item onClick={() => openModal(index) }>\n        <List.Content>\n          <List.Header>{ index.index }</List.Header>\n        </List.Content>\n      </List.Item>  \n    );  \n  }\n}\n\nexport default IndexSearchResult;","import React, { Component } from \"react\";\nimport { List } from \"semantic-ui-react\";\n\n\nclass NodeSearchResult extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const { node, openModal } = this.props;\n\n    return (\n      <List.Item onClick={() => openModal(node) }>\n        <List.Content>\n          <List.Header>{ node.name }</List.Header>\n        </List.Content>\n      </List.Item>  \n    );  \n  }\n}\n\nexport default NodeSearchResult;","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\n\nfunction DataTable(props) {\n  const { data } = props;\n\n  return (\n    <Table definition>\n      <Table.Body>\n        {Object.keys(data).map((keyName, keyIndex) => {\n          if (typeof data[keyName] === \"string\") {\n            return (\n              <Table.Row key={keyIndex}>\n                <Table.Cell width={6}>{ keyName }</Table.Cell>\n                <Table.Cell width={10}>{ data[keyName] }</Table.Cell>\n              </Table.Row>\n            )\n          }\n        })}\n      </Table.Body>\n    </Table>\n  );\n}\n\nexport default DataTable;","import React from \"react\";\nimport { Segment, Header, Grid, Feed } from \"semantic-ui-react\";\n\n\nfunction ShardCard(props) {\n  const { shard } = props;\n\n  return (\n    <Segment \n      circular \n      className=\"align-self-center shard-card\"\n      style={{ width: \"175px\", height: \"175px\" }}\n      color={shard.state === \"STARTED\" ? ( \"green\" ) : ( \"red\" )}>\n      <Header as='h2'>\n        {shard.prirep === \"p\" ? (\n          \"Primary\"\n        ) : (\n          \"Replica\"\n        )}  \n        <Header.Subheader>\n          {shard.state}\n        </Header.Subheader>\n        <Header.Subheader style={{marginTop: \"5px\"}}>\n          {shard.ip || null} \n        </Header.Subheader>\n      </Header>\n    </Segment>\n  );\n}\n\nexport default ShardCard;","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ShardCard from \"./ShardCard.js\";\n\n\nfunction ShardCardsList(props) {\n  const { shards } = props;\n\n  return (\n    <div className=\"flex justify-evenly\">\n      {shards.map((shard, i) => (\n        <ShardCard \n          key={i}\n          shard={shard} />\n      ))}\n    </div>\n  );\n}\n\nexport default ShardCardsList;\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n// components\nimport { Modal, Button, Icon } from \"semantic-ui-react\";\nimport DataTable from \"../common/DataTable.js\";\nimport ShardCardsList from \"../ shards/ShardCardsList.js\";\n\n\n\n/*\n * Displays an indices data in a modal\n *\n * @param { index }    props  Object containing the indexes data to display\n * @param { onClose }  props  The method to close the modal   \n*/\nfunction IndexModalContent(props) {\n  const { index, shards, onClose } = props;\n\n  // queries the current indexes shards from the redux store\n  const indexShards = shards.filter((shard) => {\n    if (shard.index === index.index) {\n      return shard;\n    }\n  });\n\n  // formats the index data\n  const indexData = {\n    \"Id\": index.id,\n    \"Documents\": index.docs,\n    \"Store\": index.store,\n    \"Shard\": index.shard,\n    \"Primary/Replica\": index.prirep,\n    \"State\": index.state,\n    \"Indexing Index Time\": index.iiti,\n    \"Indexing Index Total\": index.iito,\n    \"Indexing Delete Time\": index.idti,\n    \"Indexing Delete Total\": index.idto,\n    \"Flush Time\": index.ftt,\n    \"Flush Total\": index.ft,\n    \"Field Data Evictions\": index.fe,\n    \"Field Data Memory\": index.fm\n  }\n\n  return (\n    <React.Fragment>\n      <Modal.Header>{index.index}</Modal.Header>\n      <Modal.Content\n        className=\"modal-content-height\"\n        scrolling>\n        <ShardCardsList \n          shards={indexShards} />\n        <DataTable data={indexData} />\n      </Modal.Content>\n      <Modal.Actions>\n      <Button\n          onClick={onClose} \n          primary><Icon name=\"close\" /> Close</Button>\n      </Modal.Actions>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shards: state.shardStats.shards\n  }\n};\n\nexport default connect(mapStateToProps, {})(IndexModalContent);\n","import React from \"react\";\nimport { Table, Icon } from \"semantic-ui-react\";\n\n\nfunction RolesData(props) {\n  const { rolesData } = props;\n\n  return (\n    <Table definition>\n      <Table.Body>\n        {Object.keys(rolesData).map((keyName, keyIndex) => {\n          return (\n            <Table.Row key={keyIndex}>\n              <Table.Cell width={3}>{ rolesData[keyName] }</Table.Cell>\n              <Table.Cell width={8}>\n                <Icon \n                  name=\"check\"\n                  color=\"green\" />\n              </Table.Cell>\n            </Table.Row>\n          )\n        })}\n      </Table.Body>\n    </Table>\n  );\n}\n\nexport default RolesData;","import React from \"react\";\nimport { Card, Feed, Icon } from \"semantic-ui-react\";\n\n\nfunction PluginCard(props) {\n  const { plugin } = props;\n\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>\n          <a  \n            href={\"https://www.google.com/search?q=\" + plugin.classname}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            {plugin.name}\n          </a>\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Card.Description>{plugin.description}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Feed>\n          <Feed.Event>\n            <Feed.Content>\n              <Feed.Date content=\"Plugin Version\" />\n              <Feed.Summary>\n                {plugin.version}\n              </Feed.Summary>\n            </Feed.Content>\n          </Feed.Event>\n          <Feed.Event>\n            <Feed.Content>\n              <Feed.Date content=\"Elasticsearch Version\" />\n              <Feed.Summary>\n                {plugin.elasticsearch_version}\n              </Feed.Summary>\n            </Feed.Content>\n          </Feed.Event>\n          <Feed.Event>\n            <Feed.Content>\n              <Feed.Date content=\"Java Version\" />\n              <Feed.Summary>\n                {plugin.java_version}\n              </Feed.Summary>\n            </Feed.Content>\n          </Feed.Event>\n        </Feed>\n      </Card.Content>\n      <Card.Content extra>\n        {plugin.has_native_controller ? (\n          <Icon \n            name=\"check\"\n            color=\"green\" />\n          ) : (\n          <Icon \n            name=\"close\"\n            color=\"red\" />      \n          )}\n          Has Native Controller\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default PluginCard;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport PluginCard from \"./PluginCard.js\";\n\n\nfunction PluginsCardList(props) {\n  const { plugins } = props;\n\n  return (\n    <Grid>\n      <Grid.Row stretched>\n        {plugins.map((plugin, i) => (\n          <Grid.Column \n            className=\"grid-margin-top\" \n            key={i} \n            computer={8} \n            tablet={8} \n            mobile={16}>\n            <PluginCard \n              plugin={plugin} />\n          </Grid.Column>\n        ))}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default PluginsCardList;","import React from \"react\";\n\n// components\nimport { Modal, Table, Button, Icon, Tab } from \"semantic-ui-react\";\nimport DataTable from \"../common/DataTable.js\";\nimport RolesData from \"../nodes/RolesData.js\";\nimport PluginsCardList from \"../nodes/PluginsCardList.js\";\nimport ModulesCardList from \"../nodes/PluginsCardList.js\";\n\n\n/*\n * Displays a nodes data in a modal\n *\n * @param { node }     props   Object containing the nodes data to display\n * @param { onClose }  props  The method to close the modal   \n*/\nfunction NodeModalContent(props) {\n  const { node, onClose } = props;\n\n  const networkData = {\n    \"Host\": node.host,\n    \"IP Address\": node.ip,\n    \"Transport Address\": node.transport_address,\n    \"Elasticsearch Version\": node.version,\n    \"Total Indexing Buffer\": node.total_indexing_buffer_in_bytes\n  };\n  const rolesData = node.roles;\n  const httpData = node.settings.http;\n  const corsData = node.settings.http.cors;\n  const osData = node.os;\n  const pluginsData = node.plugins;\n  const modulesData = node.modules;\n\n  const panes = [\n    { menuItem: 'Network', render: () => <DataTable data={networkData} /> },\n    { menuItem: 'Roles', render: () => <RolesData rolesData={rolesData} /> },\n    { menuItem: 'HTTP', render: () => <DataTable data={httpData} /> },\n    { menuItem: 'CORS', render: () => <DataTable data={corsData} /> },\n    { menuItem: 'Operating System', render: () => <DataTable data={osData} /> },\n    { menuItem: 'Plugins', render: () => <PluginsCardList className=\"scroll\" plugins={pluginsData} /> },\n    { menuItem: 'Modules', render: () => <ModulesCardList className=\"scroll\" plugins={modulesData} /> }\n  ]\n\n  return (\n    <React.Fragment>\n      <Modal.Header>{ node.name }</Modal.Header>\n      <Modal.Content \n        className=\"modal-content-height\"\n        scrolling>\n        <Tab \n          menu={{ fluid: true, secondary: true,  vertical: true }} \n          panes={panes} />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={onClose} \n          primary><Icon name=\"close\" /> Close</Button>\n      </Modal.Actions>\n    </React.Fragment>\n  );\n}\n\nexport default NodeModalContent;","import React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport IndexModalContent from \"./IndexModalContent.js\";\nimport NodeModalContent from \"./NodeModalContent.js\";\n\n\n\nfunction ScrollModal(props) {\n  const { open, onClose, data } = props;\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      onClose={onClose}>\n      {data.index ? (\n        <IndexModalContent \n          index={data}\n          onClose={onClose} />\n      ) : (\n        <NodeModalContent \n          node={data} \n          onClose={onClose} /> \n      )}\n    </Modal>\n  );\n}\n\nexport default ScrollModal;","import React, { Component } from \"react\";\n\n// components \nimport { List, Pagination, Grid } from \"semantic-ui-react\";\nimport IndexSearchResult from \"./IndexSearchResult.js\";\nimport NodeSearchResult from \"./NodeSearchResult.js\";\nimport ScrollModal from \"../modals/ScrollModal\";\n\n\n/**\n * Displays search results and handles pagination for the results\n * \n * @param { results }        props    An array of data containing the search results \n * @param { resultsPerPage } props    Number of results to display per page\n * @param { resultType }     props    The type of data the results are\n */\n class SearchResults extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentResults: props.results.slice(0, props.resultsPerPage),\n      activePage: 1,\n      modalOpen: false,\n      modalData: {}\n    }\n  }\n\n  /*\n   * Calculates how many pages of results there should be\n   * \n   * @param  resultsLength    The total number of results\n   * @param  resultsPerPage   Number of results that should be displayed on each page\n  */\n  setPageCount = (resultsLength, resultsPerPage) => {\n    return Math.ceil(resultsLength / resultsPerPage);    \n  }\n\n  handlePaginationChange = async (e, { activePage }) => {\n    await this.setState({ activePage });\n  }\n\n  /*\n   * Sets which results should be displayed  \n  */\n  setCurrentResults = () => {\n    const { results, resultsPerPage } = this.props;\n    const { activePage } = this.state;\n    const currentResults = results.slice(\n      ((activePage - 1) * resultsPerPage), (activePage * resultsPerPage) \n    );\n    return currentResults;\n  }\n\n\n  openModal = (result) => {\n    this.setState({ \n      openModal: true,\n      modalData: result\n    });\n  }\n\n  closeModal = () => {\n    this.setState({ \n      openModal: false,\n      modalData: {}\n    });\n  }\n\n\n  render() {\n    const { results, resultsPerPage, resultType } = this.props;\n    const { activePage, openModal, modalData } = this.state;\n\n    return (\n      <React.Fragment>\n        <Grid >\n          <Grid.Row style={{ minHeight: \"350px\" }}>\n            <Grid.Column computer={16}>\n              <List selection verticalAlign=\"middle\">\n                {this.setCurrentResults().map((result, i) => {\n                  if (resultType === \"index\") {\n                    return (\n                      <IndexSearchResult \n                        key={i}\n                        index={result} \n                        openModal={this.openModal} />\n                    )\n                  } else if (resultType === \"node\") {\n                    return (\n                      <NodeSearchResult \n                        key={i}\n                        node={result}\n                        openModal={this.openModal} />\n                    )\n                  }\n                })}\n              </List>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column\n              computer={16}>\n              <Pagination\n                className=\"column-no-stretch\"\n                boundaryRange={0}\n                activePage={activePage}\n                ellipsisItem={null}\n                firstItem={null}\n                lastItem={null}\n                siblingRange={1}\n                totalPages={ this.setPageCount(results.length, resultsPerPage) }\n                onPageChange={ this.handlePaginationChange }\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        {openModal ? (\n          <ScrollModal \n            open={openModal}\n            onClose={this.closeModal}\n            data={modalData} />\n        ) : (\n          null\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SearchResults;\n\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getNodes } from \"../../actions/nodes.js\";\n\n// components\nimport { Segment, Grid, Header } from \"semantic-ui-react\";\nimport SearchForm from \"../common/SearchForm.js\";\nimport SearchResults from \"../common/SearchResults\";\n\n\nclass Nodes extends Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tisLoading: true,\n      query: \"\",\n      searchResults: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n    this.getData();\n  }\n\n\t// fetches the nodes data from the api\n\tgetData = async () => {\n    this.setState({ isLoading: true });\n    await this.props.getNodes();\n    this.setState({ \n\t\t\tisLoading: false,\n\t\t\tsearchResults: this.props.nodes\n\t\t});\n  }\n\n\t// handles change for the search input \n  handleChange = async (e) => {\n    await this.setState({ query: e.target.value });\n    this.getSearchResults();\n  }\n\n  getSearchResults = async () => {\n    const searchResults = await this.props.nodes.filter((result) => {\n      if (result.name.includes(this.state.query)) {\n        return result;\n      } \n    });\n    this.setState({ searchResults: searchResults });\n  }\n\n\t\n\trender() {\n\t\tconst { isLoading, query, searchResults } = this.state;\n\n\t\treturn (\n\t\t\t<Segment>\n        <Header\n          className=\"card-dividing-header\" \n          dividing\n          sub >\n            Nodes\n        </Header>\n        <Grid columns={2}>  \n          <Grid.Column>\n            <SearchForm \n              query={query}\n              handleChange={this.handleChange}\n              placeholder=\"Search Nodes\" />\n          </Grid.Column>\n        </Grid>\n        {!isLoading ? (\n          <SearchResults \n            results={searchResults}\n            resultsPerPage={10} \n            resultType=\"node\" />\n        ) : (\n          null\n        )}\n      </Segment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    nodes: state.nodeStats.nodes\n  };\n}\n\nexport default connect(mapStateToProps, { getNodes })(Nodes);","import { SET_NODES } from \"../constants/actionTypes.js\";\nimport nodeStats from \"../api/nodes.json\";\n\n\nexport const getNodes = () => async (dispatch) => {\n\tconst nodes = [];\n\tfor (const node in nodeStats.nodes) {\n\t\tnodes.push(nodeStats.nodes[node]);\n\t}\n\n  dispatch({\n\t\ttype: SET_NODES,\n\t\tpayload: nodes\n  });\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getIndices } from \"../../actions/indices.js\";\nimport { getShards } from \"../../actions/shards.js\";\n\n// components \nimport { Segment, Grid, Header } from \"semantic-ui-react\";\nimport SearchForm from \"../common/SearchForm.js\";\nimport SearchResults from \"../common/SearchResults\";\n\n\n\nclass Indices extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      query: \"\",\n      searchResults: []\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n\t// fetches the nodes data from the api\n\tgetData = async () => {\n    this.setState({ isLoading: true });\n    await this.props.getIndices();\n    await this.props.getShards();\n    this.setState({ \n      isLoading: false,\n      searchResults: this.props.indices\n    });\n  }\n\n  // handles change for the search input \n  handleChange = async (e) => {\n    await this.setState({ query: e.target.value });\n    this.getSearchResults();\n  }\n\n  getSearchResults = async () => {\n    const searchResults = await this.props.indices.filter((result) => {\n      if (result.index.includes(this.state.query)) {\n        return result;\n      }\n    });\n    this.setState({ searchResults: searchResults });\n  }\n\n\n  render() {\n    const { isLoading, query, searchResults  } = this.state;\n\n    return (\n      <Segment>\n        <Header\n          className=\"card-dividing-header\" \n          dividing\n          sub >\n            Indices\n        </Header>\n        <Grid columns={2}>  \n          <Grid.Column>\n            <SearchForm \n              query={query}\n              handleChange={this.handleChange}\n              placeholder=\"Search Indices\" />\n          </Grid.Column>\n        </Grid>\n        {!isLoading ? (\n          <SearchResults \n            results={searchResults}\n            resultsPerPage={10} \n            resultType=\"index\" />\n        ) : (\n          null\n        )}\n      </Segment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    indices: state.indicesStats.indices,\n    shards: state.shardStats.shards\n  };\n}\n\nexport default connect(mapStateToProps, { getIndices, getShards })(Indices);","import { SET_INDICES } from \"../constants/actionTypes.js\";\nimport indicesStats from \"../api/indices.json\";\n\n\nexport const getIndices = () => async (dispatch) => {\n  dispatch({\n\t\ttype: SET_INDICES,\n\t\tpayload: indicesStats\n  });\n}\n\n\n","import { SET_SHARDS, SET_NODES } from \"../constants/actionTypes.js\";\nimport shardStats from \"../api/shards.json\";\n\n\nexport const getShards = () => async (dispatch) => {\n  dispatch({\n    type: SET_SHARDS,\n    payload: shardStats\n  });\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\n// components\nimport { Grid } from 'semantic-ui-react'; \nimport ClusterOverview from \"../segments/ClusterOverview.js\";\nimport ClusterStats from \"../segments/ClusterStats.js\";\nimport Nodes from \"../segments/Nodes.js\";\nimport Indices from \"../segments/Indices.js\";\n\n\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <ClusterOverview /> \n        <ClusterStats />\n        <Grid columns={2}>\n          <Grid.Row stretched>\n            <Grid.Column style={{ paddingLeft: \"0.5rem\" }}>\n              <Nodes />\n            </Grid.Column>\n            <Grid.Column style={{ paddingLeft: \"0.5rem\" }}>\n              <Indices />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.user,\n    loggedIn: state.users.loggedIn\n  };\n}\n\nexport default connect(mapStateToProps, {})(Dashboard);\n\n\n\n\n\n","import React from 'react';\nimport './App.css';\n\n// redux\nimport { connect } from \"react-redux\";\n\n// components\nimport Login from \"./components/auth/Login.js\";\nimport Dashboard from \"./components/dashboard\";\n\n\nfunction App(props) {\n  if (props.loggedIn) {\n    return (\n      <Dashboard />\n    );\n  } else {\n    return (\n      <div>\n        <Login />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.user,\n    loggedIn: state.users.loggedIn\n  };\n}\n\nexport default connect(mapStateToProps, {})(App);\n","import { LOGIN, LOGOUT } from \"../constants/actionTypes.js\";\n\n\nconst initialState = {\n  user: {\"first_name\": \"Mitchell\", \"last_name\": \"Pottratz\"},\n  loggedIn: true\n};\n\nconst userReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        user: {\"first_name\": \"Mitchell\", \"last_name\": \"Pottratz\"},\n        loggedIn: true\n      };\n\n    case LOGOUT:\n      return {\n        ...state,\n        user: {}, \n        loggedIn: false\n      };\n    \n    default:\n      return state;\n  }\n}\n\nexport default userReducer;","import { SET_CLUSTER_OVERVIEW } from \"../constants/actionTypes.js\";\n\n\nconst initialState = {\n  content: {}\n}\n\nexport const clusterOverviewReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case SET_CLUSTER_OVERVIEW:\n      return {\n        ...state,\n        content: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default clusterOverviewReducer;","import { SET_CLUSTER_STATS } from \"../constants/actionTypes.js\";\n\nconst initialState = {\n  content: {}\n}\n\nconst clusterStatsReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case SET_CLUSTER_STATS:\n      return {\n        ...state,\n        content: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default clusterStatsReducer;","import { SET_NODES } from \"../constants/actionTypes.js\";\n\nconst initialState = {\n\tnodes: []\n}\n\nconst nodesReducer = (state=initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_NODES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnodes: action.payload\n\t\t\t};\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default nodesReducer;","import { SET_INDICES } from \"../constants/actionTypes.js\";\n\nconst initialState = {\n  indices: []    \n}\n\n\nconst indicesReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case SET_INDICES:\n      return {\n        ...state,\n        indices: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport default indicesReducer;","import { SET_SHARDS } from \"../constants/actionTypes.js\";\n\n\nconst initialState = {\n  shards: []    \n}\n\nconst shardsReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case SET_SHARDS: \n      return {\n        ...state,\n        shards: action.payload\n      }\n    default: \n      return state;\n  }\n}\n\nexport default shardsReducer;","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer.js\";\nimport clusterOverviewReducer from \"./clusterOverviewReducer.js\";\nimport clusterStatsReducer from \"./clusterStatsReducer.js\";\nimport nodesReducer from \"./nodesReducer.js\";\nimport indicesReducer from \"./indicesReducer.js\";\nimport shardsReducer from \"./shardsReducer.js\";\n\nexport default combineReducers({\n  users: userReducer,\n  clusterOverview: clusterOverviewReducer,\n  clusterStats: clusterStatsReducer,\n  nodeStats: nodesReducer,\n  indicesStats: indicesReducer,\n  shardStats: shardsReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// css \nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport './index.css';\n\n// redux\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer.js\";\nimport thunkMiddleWare from \"redux-thunk\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunkMiddleWare)));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}